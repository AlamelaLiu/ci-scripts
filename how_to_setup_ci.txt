1. All the installation are based on the git repo in github, the address is https://github.com/open-estuary/ci-scripts

1.1 Install Jenkins
    For the whole CI environment scheduler, it will call the lava to run the boot
    tasks and application tasks. And will push the test results to the KernelCi.
    The script about installing Jenkins locates in the ci-scripts/install-scripts/jenkins-ubuntu-install.sh, or you can directly refer to the jenkins official webpage. 

1.3 Install Lava
    Lava work for booting the system automatically. So the function of LAVA is to boot the boards automatically and run kinds of applications. The installation of it can refer to http://www.linaro.org/projects/test-validation/ . For Ubuntu 14.04, you can refer to the installation commands in ci-scripts/install-scripts/lava-install

1.4 Install the file server 
The file server is mainly used to store the bianry files which will be used for the lava jobs. The installation is in the file named of ci-scripts/install-scripts/fileserver_install.sh. The fileserver use ngnix to provide the service. 

1.5 Install the tftp server
The lava server needs the tftp service to make the board can boot successfully. So the tftp service need to deploy in the LAVA instance. That means you need to install dhcp service, nfs service and ftp service.

About the Estuary jobs: 
  estuary-trigger: For automatically trigger the build of estuary
  estuary-build: to build all the platforms and all distros
  estuary-build-complete: After building, push all the information about build to the kernelci backend database. If we don't use the kernelci to read the results. then we don't need this job.
  estaury-boot: Do the boot as much as possible. And run the test cases automatically and collect the test results. Then push the results to the file server
    
    estuary-trigger
        |
        |
        |           push distro, toolchain, binaries
    estuary-build ------------------------------------->  file server
        |
        |
        |                pull distro, binaries
    estaury-boot <-----------------------------------file server


2. The jenkins job parameters useage and descriptions. 

For the estuary build, we have some parameters, so that we can 'Build with Parameters'. So in This part, the usage of these parameters will be described.

TREE_NAME:      in the job, It mainly stand for the projects name. In the later process, it will be used to work as the root directory in the file server. String   
SHELL_PLATFORM: Which Platform will be build. Such as 'D02', 'D01' or 'D02 D01' and so on. Notes: it is case sensitive. The value must be the subset of the build.sh supported.
SHELL_DISTRO:   which distro will be built. Such as 'Ubuntu', 'Fedora' or 'Ubuntu Fedora'. Notes: It is a string parameter and case sensitive; the value of it must be the subset of the build.sh supported.
VERSION:        String Parameter, the value of it must be one value of the estaury tag list. If not set it, the ci will use the uefi_${uefi_commit_id}_grub_${grub_commit_id}_kernel_${kernel_commit_it} to instead of it.
BOOT_PLAN:      string parameter, It must be one value or a subset of the directories located in ci-scripts/boot-app-scripts/templates. Actually the default value of it is 'boot'. When lava run this job in boards, it will deploy the sata disk with the predefined distribution so that in the later process boards can boot from sata disks and run all apps in the file system which located in the sata disks.
APP_PLAN:       string parameter. select which kind of applications will run on the boards. Must be one value or a subset of directories names located in ci-scripts/boot-app-scripts/templates.
ARCH_MAP:       the string parameter. Actually, it describe the map between the board and its architecture. Such as 'd03 arm64 d02 arm64 d02 arm64'. It also can be written in the config.yaml which locate in the ci-scripts/boot-app-scripts.
